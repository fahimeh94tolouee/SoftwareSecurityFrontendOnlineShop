{"version":3,"file":"static/webpack/static/development/pages/_app.js.409c2805679b491c6140.hot-update.js","sources":["webpack:///./actions/actionTypes.js","webpack:///./actions/index.js","webpack:///./actions/question.js","webpack:///./api/question.js","webpack:///./constants/api.js","webpack:///./reducers/question.js","webpack:///./sagas/index.js","webpack:///./sagas/question.js"],"sourcesContent":["export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\";\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\nexport const VERIFY_FAILURE = \"VERIFY_FAILURE\";\n\nexport const SET_USER_DATA = \"SET_USER_DATA\"\nexport const GET_USER_DATA = \"GET_USER_DATA\"\nexport const GET_USER_DATA_SUCCESS = \"GET_USER_DATA_SUCCESS\"\nexport const GET_USER_DATA_FAILURE = \"GET_USER_DATA_FAILURE\"\n\nexport const UPDATE_USER_DATA = \"UPDATE_USER_DATA\"\nexport const UPDATE_USER_DATA_SUCCESS = \"UPDATE_USER_DATA_SUCCESS\"\nexport const UPDATE_USER_DATA_FAILURE = \"UPDATE_USER_DATA_FAILURE\"\n\nexport const CHANGE_USER_PASSWORD = \"CHANGE_USER_PASSWORD\"\nexport const CHANGE_USER_PASSWORD_SUCCESS = \"CHANGE_USER_PASSWORD_SUCCESS\"\nexport const CHANGE_USER_PASSWORD_FAILURE = \"CHANGE_USER_PASSWORD_FAILURE\"\n\n\nexport const GET_PRODUCT_LIST_REQUEST = \"GET_PRODUCT_LIST_REQUEST\";\nexport const GET_PRODUCT_LIST_SUCCESS = \"GET_PRODUCT_LIST_SUCCESS\";\nexport const GET_PRODUCT_LIST_FAILURE = \"GET_PRODUCT_LIST_FAILURE\";\n\nexport const SHOW_PRODUCT_REQUEST = \"SHOW_PRODUCT_REQUEST\";\nexport const SHOW_PRODUCT_SUCCESS = \"SHOW_PRODUCT_SUCCESS\";\nexport const SHOW_PRODUCT_FAILURE = \"SHOW_PRODUCT_FAILURE\";\n\n\nexport const QUESTION_LIST_REQUEST = \"QUESTION_LIST_REQUEST\";\nexport const QUESTION_LIST_SUCCESS = \"QUESTION_LIST_SUCCESS\";\nexport const QUESTION_LIST_FAILURE = \"QUESTION_LIST_FAILURE\";\nexport const QUESTION_STORE_REQUEST = \"QUESTION_STORE_REQUEST\";\nexport const QUESTION_STORE_SUCCESS = \"QUESTION_STORE_SUCCESS\";\nexport const QUESTION_STORE_FAILURE = \"QUESTION_STORE_FAILURE\";\nexport const QUESTION_UPDATE_REQUEST = \"QUESTION_UPDATE_REQUEST\";\nexport const QUESTION_UPDATE_SUCCESS = \"QUESTION_UPDATE_SUCCESS\";\nexport const QUESTION_UPDATE_FAILURE = \"QUESTION_UPDATE_FAILURE\";","import * as AuthAction from \"./auth\";\nimport * as UserAction from \"./user\";\nimport * as ProductAction from \"./product\";\nimport * as QuestionAction from \"./question\";\n\nexport {\n  AuthAction,\n  UserAction,\n  ProductAction,\n  QuestionAction\n}","import Request from '../utilities/request';\nimport * as types from \"../actions/actionTypes\";\nexport const setQuestion = data => ({\n  type: \"SET_QUESTION\",\n  payload: data\n});\n\nexport const getListRequest = () => {\n  return {\n    type: types.QUESTION_LIST_REQUEST\n  };\n};\nexport const getListSuccess = data => {\n  return {\n    type: types.QUESTION_LIST_SUCCESS,\n    payLoad: data\n  };\n};\nexport const getListFailure = (error) => {\n  return {\n    type: types.QUESTION_LIST_FAILURE,\n    error: error\n  };\n};\n\nexport const storeRequest = data => {\n  return {\n    type: types.QUESTION_STORE_REQUEST,\n    data: data\n  };\n};\nexport const storeSuccess = () => {\n  return {\n    type: types.QUESTION_STORE_SUCCESS,\n  };\n};\nexport const storeFailure = () => {\n  return {\n    type: types.QUESTION_STORE_FAILURE\n  };\n};\n\nexport const updateRequest = (id, data) => {\n  return {\n    type: types.QUESTION_UPDATE_REQUEST,\n    id: id,\n    data: data\n  };\n};\nexport const updateSuccess = () => {\n  return {\n    type: types.QUESTION_UPDATE_SUCCESS,\n  };\n};\nexport const updateFailure = () => {\n  return {\n    type: types.QUESTION_UPDATE_FAILURE\n  };\n};\n\nexport const getQuestion = (id, params = {}) => {\n  return async dispatch => {\n    dispatch(\n      setQuestion({\n        loading: true\n      })\n    );\n    await Request({\n      url: process.env.apiUrl + \"/products/\" + id + \"/questions\",\n      method: \"get\",\n      params: params\n    })\n      .then(response => {\n        dispatch(\n          setQuestion({\n            loading: false,\n            data: response.data.data,\n            meta: response.data.meta,\n            cache: true\n          })\n        );\n      })\n      .catch(error => {});\n  };\n};\n","import Request from \"../utilities/request\";\nimport {PRODUCT_API, QUESTION_API, QUESTION_LIST_API} from \"../constants/api\";\n\nconst baseUrl = process.env.apiUrl;\n\nexport const getList = () => {\n  return Request({\n    method: \"get\",\n    url: `${baseUrl}${PRODUCT_API}${QUESTION_LIST_API}`,\n    needToken: true\n  });\n};\n\nexport const store = data => {\n  return Request({\n    method: \"post\",\n    url: `${baseUrl}${PRODUCT_API}${QUESTION_API}`,\n    needToken: true,\n    data: data\n  });\n};\n\nexport const update = (id, data) => {\n  return Request({\n    method: \"put\",\n    url: `${baseUrl}${PRODUCT_API}${QUESTION_API}${id}`,\n    needToken: true,\n    data: data\n  });\n};\n","export const AUTH_LOGIN_API = \"/auth/login/\"\nexport const AUTH_REGISTER_API = \"/auth/register/\"\nexport const AUTH_VERIFY_API = \"/auth/verify/\"\nexport const AUTH_RESET_PASSWORD_API = \"resetPassword\"\nexport const AUTH_CHECK_REFERENCE_CODE_API = \"checkReferenceCode\"\nexport const AUTH_RESEND_OTP_API = \"resendOtp\"\n\nexport const USER_API = \"/user/\"\nexport const UPDATE_INFO_API = \"updateInfo/\"\nexport const CHANGE_PASSWORD_API = \"changePassword/\"\n\nexport const PRODUCT_API = \"/product/\"\nexport const LIST_API = \"list/\"\n\nexport const QUESTION_API = `question`\nexport const QUESTION_LIST_API = `${QUESTION_API}-${LIST_API}`\n","import * as types from \"../actions/actionTypes\";\n\nconst initialState = {\n    loading:true,\n    data:[],\n    isFetched:false,\n    error:\"\",\n    processing:false,\n    cache:false,\n    meta:{},\n};\nconst Question = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_QUESTION':\n            return { ...state, ...action.payload }\n        case types.QUESTION_LIST_REQUEST:\n            return { ...state, loading: true, error: \"\" };\n        case types.QUESTION_LIST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                data: action.payLoad,\n                isFetched: true\n            };\n        case types.QUESTION_LIST_FAILURE:\n            return { ...state, loading: false, error: action.error };\n\n        case types.QUESTION_STORE_REQUEST:\n            return { ...state, processing: true };\n        case types.QUESTION_STORE_SUCCESS:\n            return { ...state, processing: false };\n        case types.QUESTION_STORE_FAILURE:\n            return { ...state, processing: false };\n\n        case types.QUESTION_UPDATE_REQUEST:\n            return { ...state, processing: true };\n        case types.QUESTION_UPDATE_SUCCESS:\n            return { ...state, processing: false };\n        case types.QUESTION_UPDATE_FAILURE:\n            return { ...state, processing: false };\n        default:\n            return state\n    }\n};\n\nexport default Question","import { all } from \"redux-saga/effects\";\nimport { watcherAuth } from \"./auth\";\nimport { watcherUser } from \"./user\";\nimport {watcherProduct} from \"./product\";\nimport {watcherQuestion} from \"./question\";\n\nexport default function* rootSaga() {\n  yield all([\n    watcherAuth(),\n    watcherUser(),\n    watcherProduct(),\n    watcherQuestion()\n  ])\n}\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport * as types from \"../actions/actionTypes\";\nimport { QuestionAction } from \"../actions\";\nimport * as questionApi from \"../api/question\";\nimport { toastr } from \"react-redux-toastr\";\nimport { SetMessage } from \"../utilities/specifics/errorMessages\";\n\nexport function* watcherQuestion() {\n  yield takeLatest(types.QUESTION_LIST_REQUEST, list);\n  yield takeLatest(types.QUESTION_STORE_REQUEST, store);\n  yield takeLatest(types.QUESTION_UPDATE_REQUEST, update);\n}\n\nfunction getList() {\n  return questionApi.getList();\n}\n\nfunction* list() {\n  try {\n    const response = yield call(getList);\n    yield put(QuestionAction.getListSuccess(response.data.data));\n  } catch (error) {\n    const message = SetMessage(error);\n    yield put(QuestionAction.getListFailure(message));\n  }\n}\n\nfunction storeReq(data) {\n  return questionApi.store(data);\n}\n\nfunction* store(action) {\n  try {\n    const response = yield call(storeReq, action.data);\n    const data = response.data;\n    data.message.forEach(message => {\n      toastr.success(\" \", message.toString());\n    });\n    const listResponse = yield call(getList);\n    yield put(QuestionAction.storeSuccess());\n    yield put(QuestionAction.getListSuccess(listResponse.data.data));\n  } catch (error) {\n    SetMessage(error, true);\n    yield put(QuestionAction.storeFailure());\n  }\n}\n\nfunction updateReq(id, data) {\n  return questionApi.update(id, data);\n}\n\nfunction* update(action) {\n  try {\n    const response = yield call(updateReq, action.id, action.data);\n    const data = response.data;\n    data.message.forEach(message => {\n      toastr.success(\" \", message.toString());\n    });\n    const listResponse = yield call(getList);\n    yield put(QuestionAction.updateSuccess());\n    yield put(QuestionAction.getListSuccess(listResponse.data.data));\n  } catch (error) {\n    SetMessage(error, true);\n    yield put(QuestionAction.updateFailure());\n  }\n}"],"mappings":"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","sourceRoot":""}