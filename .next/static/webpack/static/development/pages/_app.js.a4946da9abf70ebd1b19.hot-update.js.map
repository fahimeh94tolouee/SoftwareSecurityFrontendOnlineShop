{"version":3,"file":"static/webpack/static/development/pages/_app.js.a4946da9abf70ebd1b19.hot-update.js","sources":["webpack:///./actions/actionTypes.js","webpack:///./actions/index.js","webpack:///./actions/order.js","webpack:///./api/order.js","webpack:///./reducers/order.js","webpack:///./sagas/index.js","webpack:///./sagas/order.js","webpack:///./utilities/specifics/addToCart.js"],"sourcesContent":["export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\";\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\nexport const VERIFY_FAILURE = \"VERIFY_FAILURE\";\n\nexport const SET_USER_DATA = \"SET_USER_DATA\"\nexport const GET_USER_DATA = \"GET_USER_DATA\"\nexport const GET_USER_DATA_SUCCESS = \"GET_USER_DATA_SUCCESS\"\nexport const GET_USER_DATA_FAILURE = \"GET_USER_DATA_FAILURE\"\n\nexport const UPDATE_USER_DATA = \"UPDATE_USER_DATA\"\nexport const UPDATE_USER_DATA_SUCCESS = \"UPDATE_USER_DATA_SUCCESS\"\nexport const UPDATE_USER_DATA_FAILURE = \"UPDATE_USER_DATA_FAILURE\"\n\nexport const CHANGE_USER_PASSWORD = \"CHANGE_USER_PASSWORD\"\nexport const CHANGE_USER_PASSWORD_SUCCESS = \"CHANGE_USER_PASSWORD_SUCCESS\"\nexport const CHANGE_USER_PASSWORD_FAILURE = \"CHANGE_USER_PASSWORD_FAILURE\"\n\n\nexport const GET_PRODUCT_LIST_REQUEST = \"GET_PRODUCT_LIST_REQUEST\";\nexport const GET_PRODUCT_LIST_SUCCESS = \"GET_PRODUCT_LIST_SUCCESS\";\nexport const GET_PRODUCT_LIST_FAILURE = \"GET_PRODUCT_LIST_FAILURE\";\n\nexport const SHOW_PRODUCT_REQUEST = \"SHOW_PRODUCT_REQUEST\";\nexport const SHOW_PRODUCT_SUCCESS = \"SHOW_PRODUCT_SUCCESS\";\nexport const SHOW_PRODUCT_FAILURE = \"SHOW_PRODUCT_FAILURE\";\n\n\nexport const QUESTION_LIST_REQUEST = \"QUESTION_LIST_REQUEST\";\nexport const QUESTION_LIST_SUCCESS = \"QUESTION_LIST_SUCCESS\";\nexport const QUESTION_LIST_FAILURE = \"QUESTION_LIST_FAILURE\";\nexport const QUESTION_STORE_REQUEST = \"QUESTION_STORE_REQUEST\";\nexport const QUESTION_STORE_SUCCESS = \"QUESTION_STORE_SUCCESS\";\nexport const QUESTION_STORE_FAILURE = \"QUESTION_STORE_FAILURE\";\nexport const QUESTION_ON_CHANGE = \"QUESTION_ON_CHANGE\";\nexport const QUESTION_UPDATE_REQUEST = \"QUESTION_UPDATE_REQUEST\";\nexport const QUESTION_UPDATE_SUCCESS = \"QUESTION_UPDATE_SUCCESS\";\nexport const QUESTION_UPDATE_FAILURE = \"QUESTION_UPDATE_FAILURE\";\n\nexport const ADD_TO_CART_REQUEST = \"ADD_TO_CART_REQUEST\";\nexport const ADD_TO_CART_SUCCESS = \"ADD_TO_CART_SUCCESS\";\nexport const ADD_TO_CART_FAILURE = \"ADD_TO_CART_FAILURE\";","import * as AuthAction from \"./auth\";\nimport * as UserAction from \"./user\";\nimport * as ProductAction from \"./product\";\nimport * as QuestionAction from \"./question\";\nimport * as OrderAction from \"./order\";\n\nexport {\n  AuthAction,\n  UserAction,\n  ProductAction,\n  QuestionAction,\n  OrderAction\n}","import Request from \"../utilities/request\";\nimport * as types from \"../actions/actionTypes\";\n\nexport const setOrder = data => ({\n  type: \"SET_ORDER\",\n  payload: data\n});\nexport const getOrder = () => {\n  return dispatch => {\n    Request({\n      url: process.env.apiUrl + \"/profile/orders/\",\n      method: \"get\",\n      needToken: true\n    })\n      .then(response => {\n        dispatch(\n          setOrder({\n            items: response.data.data\n          })\n        );\n      })\n      .catch(error => {});\n  };\n};\nexport const getSingleOrder = id => {\n  return dispatch => {\n    Request({\n      url: process.env.apiUrl + \"/profile/orders/\" + id,\n      method: \"get\",\n      needToken: true\n    })\n      .then(response => {\n        dispatch(\n          setOrder({\n            order: response.data.data\n          })\n        );\n      })\n      .catch(error => {});\n  };\n};\nexport const addOrder = data => {\n  return async dispatch => {\n    let params = {};\n    let cartItems = [];\n    if (localStorage.getItem(\"cart\")) {\n      cartItems = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n    params.variations = cartItems;\n    params = Object.assign(params, data);\n    await Request({\n      url: process.env.apiUrl + \"/orders/\",\n      method: \"post\",\n      data: params,\n      needToken: true\n    })\n      .then(response => {\n        window.location.replace(response.data.data.redirect_url);\n      })\n      .catch(error => {});\n  };\n};\nexport const RejectOrder = (id, data) => {\n  return dispatch => {\n    Request({\n      url: process.env.apiUrl + \"/profile/orders/\" + id + \"/return\",\n      method: \"post\",\n      data: data,\n      needToken: true\n    })\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => {});\n  };\n};\n\nexport const addToCart = (data) => {\n  return {\n    type: types.ADD_TO_CART_REQUEST,\n    data,\n  };\n};\n\nexport const addToCartSuccess = (data) => {\n  return {\n    type: types.ADD_TO_CART_SUCCESS,\n    data\n  };\n};\n\nexport const addToCartFailure = () => {\n  return {\n    type: types.ADD_TO_CART_FAILURE\n  };\n};\n","import Request from \"../utilities/request\";\nimport {ADD_TO_CART_API, ORDER_API} from \"../constants/api\";\n\nconst baseUrl = process.env.apiUrl;\n\nexport const addToCart = (data) => {\n  return Request({\n    method: \"post\",\n    url: `${baseUrl}${ORDER_API}${ADD_TO_CART_API}`,\n    needToken: true,\n    data:data\n  });\n};","import {ADD_TO_CART_FAILURE, ADD_TO_CART_REQUEST, ADD_TO_CART_SUCCESS} from \"../actions/actionTypes\";\n\nconst initialState = {\n    items:[],\n    order:{},\n    processing:false,\n    cartItems:[]\n};\nconst Order = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_ORDER':\n            return { ...state, ...action.payload };\n        case ADD_TO_CART_REQUEST:\n            return {...state, processing:true};\n        case ADD_TO_CART_SUCCESS:\n            return {...state, processing:false, cartItems: action.data};\n        case ADD_TO_CART_FAILURE:\n            return {...state, processing:false};\n        default:\n            return state\n    }\n}\n\nexport default Order;","import { all } from \"redux-saga/effects\";\nimport { watcherAuth } from \"./auth\";\nimport { watcherUser } from \"./user\";\nimport {watcherProduct} from \"./product\";\nimport {watcherQuestion} from \"./question\";\nimport {watcherOrder} from \"./order\";\n\nexport default function* rootSaga() {\n  yield all([\n    watcherAuth(),\n    watcherUser(),\n    watcherProduct(),\n    watcherQuestion(),\n    watcherOrder()\n  ])\n}\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport * as types from \"../actions/actionTypes\";\nimport { OrderAction } from \"../actions\";\nimport * as orderApi from \"../api/order\";\nimport { toastr } from \"react-redux-toastr\";\nimport { SetMessage } from \"../utilities/specifics/errorMessages\";\nimport {addToCart as addToCartUtils} from \"../utilities/specifics/addToCart\"\nimport Router from \"next/router\";\nimport {CART} from \"../constants/urls\";\nexport function* watcherOrder() {\n  yield takeLatest(types.ADD_TO_CART_REQUEST, addToCart);\n}\n\nfunction addToCartRequest(data) {\n  return orderApi.addToCart(data);\n}\n\nfunction* addToCart(action) {\n  try {\n    const response = yield call(addToCartRequest, action.data);\n    response.data.message.forEach(message => {\n      toastr.success(\" \", message.toString());\n    });\n    addToCartUtils(action.data.product_id, 1)\n    yield call(Router.push, CART);\n    yield put(OrderAction.addToCartSuccess(response.data.data));\n  } catch (error) {\n    SetMessage(error, true);\n    yield put(OrderAction.addToCartFailure());\n  }\n}\n\n","import {CART} from \"../../constants/storageKey\";\nimport {CART as CART_URL} from \"../../constants/urls\";\n\nexport const addToCart = (id, qty) => {\n  let cart = [];\n  let pushStatus = true;\n  if (localStorage.getItem(CART)) {\n    cart = JSON.parse(localStorage.getItem(CART));\n  }\n  cart.filter(item => {\n    if (item.id === id) {\n      pushStatus = false;\n    }\n  });\n  if (pushStatus) {\n    cart.push({ id: id, quantity: qty });\n  }\n  localStorage.setItem(CART, JSON.stringify(cart));\n}"],"mappings":"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","sourceRoot":""}