{"version":3,"file":"static/webpack/static/development/pages/profile/information.js.142caa2a8af6d6ae2e69.hot-update.js","sources":["webpack:///./pages/profile/information.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport validator from \"validator\";\nimport { TitleBox } from \"../../styled_components/profile\";\nimport { getInformation, updateInformation } from \"../../actions/user\";\nimport { InforamtionBox } from \"../../styled_components/profile/information\";\nimport { Row, Col } from \"styled-bootstrap-grid\";\nimport CheckBox from \"../../components/lib/checkbox\";\nimport Switch from \"react-switch\";\nimport Request from \"../../utilities/request\";\nimport Select from \"react-select\";\nclass Information extends Component {\n  static async getInitialProps({ store, query }) {}\n\n  constructor(props) {\n    super(props);\n    this.state = { data: this.props.userData.data };\n    // if (\n    //   typeof this.props.userData.data !== \"undefined\"\n    // ) {\n    //   this.getLocation(\n    //     \"cities\",\n    //     this.props.userData.data.legal_user.province.value\n    //   );\n    // }\n  }\n  componentDidMount() {\n    this.props.getInformation();\n    // this.getLocation(\"provinces\", 1);\n  }\n  getLocation(type, id) {\n    Request({\n      method: \"get\",\n      url: process.env.apiUrl + \"/admin/locations/\" + id + \"/children\"\n    })\n      .then(response => {\n        this.setState({\n          [type]: response.data.data\n        });\n      })\n      .catch(error => {});\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let result = {};\n    if (nextProps.userData.data !== prevState.data) {\n      result.data = nextProps.userData.data;\n    }\n    return result;\n  }\n  handelChange(value, type, name) {\n    let data = this.state.data;\n    data[type][name] = value;\n    this.setState({\n      data: data\n    });\n  }\n  handelCheckBox(type, name) {\n    let data = this.state.data;\n    data[type][name] = !data[type][name];\n    this.setState({\n      data: data\n    });\n  }\n  handelSwitch(value) {\n    let data = this.state.data;\n    data[value] = !data[value];\n    this.setState({\n      data: data\n    });\n  }\n \n  handleLocation(value, type) {\n    if (type === \"province\") {\n      this.getLocation(\"cities\", value.value);\n    }\n    let data = this.state.data;\n    data.legal_user[type] = value;\n    this.setState({\n      data: data\n    });\n  }\n  submit() {\n    this.props.updateInformation(this.state.data);\n  }\n  actionBox(position) {\n    if (position === \"top\" && !this.state.data.is_legal_user) {\n      return (\n        <div className=\"action-box\">\n          <div className=\"submit\" onClick={this.submit.bind(this)}>\n            Save\n          </div>\n          <div className=\"cancel\">Cancel</div>\n        </div>\n      );\n    } else if (position === \"bottom\" && this.state.data.is_legal_user) {\n      return (\n        <div className=\"action-box\">\n          <div className=\"submit\" onClick={this.submit.bind(this)}>\n            Save\n          </div>\n          <div className=\"cancel\">Cancel</div>\n        </div>\n      );\n    }\n  }\n  formView() {\n    let data = this.state.data;\n    if (typeof data !== \"undefined\") {\n      return (\n        <form>\n          <div className=\"form-box\">\n            <Row>\n              <Col col={6}>\n                <div className=\"title\">حساب شخصی</div>\n                <label>First Name</label>\n                <input\n                  type=\"text\"\n                  value={data.first_name}\n                  onChange={e => {\n                    this.handelChange(e.target.value, \"real_user\", \"name\");\n                  }}\n                />\n                <label>Last Name</label>\n                <input\n                  type=\"text\"\n                  value={data.last_name}\n                  onChange={e => {\n                    this.handelChange(e.target.value, \"real_user\", \"family\");\n                  }}\n                />\n                <label>Email</label>\n                <input\n                  type=\"text\"\n                  value={data.email}\n                  onChange={e => {\n                    this.handelChange(e.target.value, \"real_user\", \"email\");\n                  }}\n                />\n                <label>Credit Card</label>\n                <input\n                  type=\"text\"\n                  value={data.credit_card}\n                  onChange={e => {\n                    this.handelChange(\n                      e.target.value,\n                      \"real_user\",\n                      \"card_number\"\n                    );\n                  }}\n                />\n              </Col>\n              <Col col={6}>\n                <div className=\"title\">Contact Information</div>\n                <label>Phone Number</label>\n                <input\n                  type=\"text\"\n                  value={data.phone_number}\n                  onChange={e => {\n                    this.handelChange(e.target.value, \"real_user\", \"mobile\");\n                  }}\n                />\n                <label>Address</label>\n                <input\n                  type=\"text\"\n                  value={data.address}\n                  onChange={e => {\n                    this.handelChange(e.target.value, \"real_user\", \"email\");\n                  }}\n                />\n                <label>Postal Code</label>\n                <input\n                  type=\"text\"\n                  value={data.postal_code}\n                  onChange={e => {\n                    this.handelChange(e.target.value, \"real_user\", \"email\");\n                  }}\n                />\n                <div\n                  onClick={() => {\n                    this.handelCheckBox(\"real_user\", \"subscribe_newsletter\");\n                  }}\n                >\n                  <CheckBox\n                    title=\"Subscribe to Maleno Newsletter\"\n                    status={data.subscribe_newsletter}\n                  />\n                </div>\n              </Col>\n            </Row>\n          </div>\n          {this.actionBox(\"top\")}\n\n        </form>\n      );\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <React.Fragment>\n        <TitleBox>ویرایش اطـلاعـات شـخصی</TitleBox>\n        <InforamtionBox>{this.formView()}</InforamtionBox>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = store => {\n  return {\n    userData: store.User\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getInformation: () => {\n      dispatch(getInformation());\n    },\n    updateInformation: data => {\n      dispatch(updateInformation(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Information);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;AACA;AACA;;;;;;;;;;;;;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAWA;AACA;;;AAAA;AACA;AAEA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AAGA;AAEA;;;AAQA;AACA;AACA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAGA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AAKA;AATA;AAYA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAYA;AACA;;;AAEA;AACA;AACA;AAMA;;;AAnKA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;AArCA;AACA;AAmMA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAAA;;;;A","sourceRoot":""}