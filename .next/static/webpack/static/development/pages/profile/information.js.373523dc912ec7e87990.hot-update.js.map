{"version":3,"file":"static/webpack/static/development/pages/profile/information.js.373523dc912ec7e87990.hot-update.js","sources":["webpack:///./pages/profile/information.js","webpack:///./styled_components/profile/information.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport validator from \"validator\";\nimport { TitleBox } from \"../../styled_components/profile\";\nimport { updateInformation } from \"../../actions/user\";\nimport { InforamtionBox } from \"../../styled_components/profile/information\";\nimport { Row, Col } from \"styled-bootstrap-grid\";\nimport CheckBox from \"../../components/lib/checkbox\";\nimport Request from \"../../utilities/request\";\nimport {UserAction} from \"../../actions\";\nimport {Spinner} from \"../../components/loadings/spinner\";\nimport {Loading} from \"../../styled_components/button\";\nimport Button from \"../../components/button\";\nclass Information extends Component {\n  static async getInitialProps({ store, query }) {}\n\n  constructor(props) {\n    super(props);\n    this.state = { data: this.props.userData.data };\n  }\n  componentDidMount() {\n    // this.props.getInformation();\n    // this.getLocation(\"provinces\", 1);\n  }\n  getLocation(type, id) {\n    Request({\n      method: \"get\",\n      url: process.env.apiUrl + \"/admin/locations/\" + id + \"/children\"\n    })\n      .then(response => {\n        this.setState({\n          [type]: response.data.data\n        });\n      })\n      .catch(error => {});\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let result = {};\n    if (nextProps.userData.data !== prevState.data) {\n      result.data = nextProps.userData.data;\n    }\n    return result;\n  }\n  handelChange(value, name) {\n    let data = this.state.data;\n    data[name] = value;\n    this.setState({\n      data: data\n    });\n  }\n  handelCheckBox(name) {\n    let data = this.state.data;\n    data[name] = !data[name];\n    this.setState({\n      data: data\n    });\n  }\n\n  submit() {\n    this.props.updateInformation(this.state.data);\n  }\n  actionBox() {\n    const{processing}=this.props.userData;\n    return (\n      <div className=\"action-box\">\n        {/*<div className=\"submit\" onClick={this.submit.bind(this)}>*/}\n        {/*  {processing?*/}\n        {/*    <Loading show={true}>*/}\n        {/*      <Spinner />*/}\n        {/*    </Loading>*/}\n        {/*    :\"Save\"}*/}\n        {/*</div>*/}\n        <Button onClick={this.submit.bind(this)} loading={processing}>\n          Save\n        </Button>\n\n        {/*<div className=\"cancel\">Cancel</div>*/}\n      </div>\n    );\n  }\n  formView() {\n    let data = this.state.data;\n    if (typeof data !== \"undefined\") {\n      return (\n        <form>\n          <div className=\"form-box\">\n            <Row>\n              <Col col={6}>\n                <div className=\"title\">Personal Information</div>\n                <label>First Name</label>\n                <input\n                  type=\"text\"\n                  value={data.first_name}\n                  onChange={e => {\n                    this.handelChange(e.target.value, \"first_name\");\n                  }}\n                />\n                <label>Last Name</label>\n                <input\n                  type=\"text\"\n                  value={data.last_name}\n                  onChange={e => {\n                    this.handelChange(e.target.value,  \"last_name\");\n                  }}\n                />\n                <label>Email</label>\n                <input\n                  type=\"text\"\n                  value={data.email}\n                  disabled={true}\n                />\n                <label>Credit Card</label>\n                <input\n                  type=\"number\"\n                  value={data.credit_card}\n                  onChange={e => {\n                    this.handelChange(\n                      e.target.value,\n                      \"credit_card\"\n                    );\n                  }}\n                />\n              </Col>\n              <Col col={6}>\n                <div className=\"title\">Contact Information</div>\n                <label>Phone Number</label>\n                <input\n                  type=\"number\"\n                  value={data.phone_number}\n                  onChange={e => {\n                    this.handelChange(e.target.value, \"phone_number\");\n                  }}\n                />\n                <label>Address</label>\n                <input\n                  type=\"text\"\n                  value={data.address}\n                  onChange={e => {\n                    this.handelChange(e.target.value, \"address\");\n                  }}\n                />\n                <label>Postal Code</label>\n                <input\n                  type=\"text\"\n                  value={data.postal_code}\n                  onChange={e => {\n                    this.handelChange(e.target.value,  \"postal_code\");\n                  }}\n                />\n                <div\n                  onClick={() => {\n                    this.handelCheckBox(\"subscribe_newsletter\");\n                  }}\n                >\n                  <CheckBox\n                    title=\"Subscribe to Maleno Newsletter\"\n                    status={data.subscribe_newsletter}\n                  />\n                </div>\n              </Col>\n            </Row>\n          </div>\n          {this.actionBox()}\n\n        </form>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <TitleBox>Edit Personal Information</TitleBox>\n        <InforamtionBox>{this.formView()}</InforamtionBox>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = store => {\n  return {\n    userData: store.User\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getInformation: () => {\n      dispatch(UserAction.getInfo());\n    },\n    updateInformation: data => {\n      dispatch(UserAction.updateInfo(data));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Information);\n","import styled from \"styled-components\";\nimport Variables, { transition } from \"../variables\";\nexport const InforamtionBox = styled.div`\n  background-color: ${Variables.colors.white};\n  border-radius: 4px;\n  border: solid 1px ${Variables.colors.light_grey};\n  box-shadow: 0 0 12px 0 rgba(0, 0, 0, 0.05);\n  .action-box {\n    display: flex;\n    justify-content: flex-end;\n    padding: 32px;\n    &>div:first-child{\n      width: 60px;\n    }\n    .submit,\n    .cancel {\n      color: ${Variables.colors.white};\n      border-radius: 8px;\n      cursor: pointer;\n      padding: 12px 32px;\n      margin-right: 16px;\n      min-width: 60px;\n    }\n    .submit {\n      background-color: ${Variables.colors.nice_blue};\n    }\n    .cancel {\n      background-color: ${Variables.colors.pinkish_grey};\n    }\n  }\n  .form-box {\n    color: ${Variables.colors.warm_grey};\n    padding: 64px;\n    .title {\n      color: ${Variables.colors.cool_blue};\n      font-size: 20px;\n      opacity: 0.5;\n      margin-bottom: 48px;\n    }\n    label {\n      font-size: 14px;\n      display: block;\n      margin-top: 16px;\n      margin-bottom: 8px;\n    }\n    input {\n      border-radius: 8px;\n      border: solid 1px ${Variables.colors.light_grey};\n      padding: 12px;\n      width: 100%;\n      margin-bottom: 16px;\n      &::placeholder {\n        color: ${Variables.colors.pinkish_grey};\n      }\n    }\n  }\n  .action-box {\n  }\n  .legal-box {\n    position: relative;\n    border-top: dashed 1px ${Variables.colors.pinkish_grey};\n    .over {\n      background-color: hsla(0, 0%, 100%, 0.7);\n      position: absolute;\n      z-index: 1;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      .legal-slogan {\n        display: flex;\n        flex-direction: column;\n        font-size: 18px;\n        color: ${Variables.colors.cool_blue};\n        text-align: center;\n        cursor: pointer;\n        i {\n          font-size: 44px;\n        }\n      }\n    }\n    .switch-box {\n      .eleman {\n        display: flex;\n        align-items: center;\n        .label {\n          margin-right: 20px;\n        }\n      }\n      .slogan {\n        font-size: 13px;\n        line-height: 18px;\n        margin: 16px 0 65px 0;\n      }\n    }\n    .location {\n      display: flex;\n      justify-content: space-between;\n      .select{\n        width: 48%;\n      }\n    }\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;AACA;AACA;;;;;;;;;;;;;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AAAA;AAEA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AAGA;AAEA;;;AAQA;AACA;AACA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;;;AACA;AAAA;AAEA;AACA;AAAA;AAQA;AAAA;AAAA;AAOA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AAIA;AARA;AAWA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAYA;AACA;;;AAEA;AACA;AAMA;;;AA5IA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;AA7BA;AACA;AAoKA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAAA;;;;;;;;;;;;ACjMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}