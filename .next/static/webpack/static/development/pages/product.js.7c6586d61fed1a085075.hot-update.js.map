{"version":3,"file":"static/webpack/static/development/pages/product.js.7c6586d61fed1a085075.hot-update.js","sources":["webpack:///./components/button/index.js","webpack:///./components/loadings/spinner.js","webpack:///./components/product/productData/question.js","webpack:///./containers/productData.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./styled_components/button.js","webpack:///./styled_components/loading/spinner.js"],"sourcesContent":["import React from \"react\";\nimport { Box, Children, Loading } from \"../../styled_components/button\";\nimport { Spinner } from \"../loadings/spinner\";\n\nexport default props => {\n  const { borderless, loading, ...other } = props;\n  return (\n    <Box btn={props.btn} borderless={borderless} active={props.active}>\n      <button\n        {...other}\n        onClick={\n          !props.onClick\n            ? props.onClick\n            : !loading\n              ? e => {\n                e.stopPropagation();\n                props.onClick(e);\n              }\n              : e => {\n                e.preventDefault();\n                return false;\n              }\n        }\n        disabled={props.disabled}\n      >\n        <Loading show={loading}>\n          <Spinner />\n        </Loading>\n        <Children show={!loading}>{props.children}</Children>\n      </button>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { SpinnerContainer } from \"../../styled_components/loading/spinner\";\n\nexport const Spinner = props => {\n  return (\n    <SpinnerContainer\n      color={props.color}\n      borderless={props.borderless}\n      btn={props.btn}\n      type={props.type}\n      size={props.size}\n    >\n      <div className=\"loader\" />\n    </SpinnerContainer>\n  );\n};\n","import React, {useState} from \"react\";\nimport { Col, Row } from \"styled-bootstrap-grid\";\nimport Checkbox from \"../../lib/checkbox\";\nimport { Box } from \"../../../styled_components/product/databox/questionBox\";\nimport Button from \"../../button\";\nconst Question = props => {\n  console.log(props);\n\n  const [newQuestion, setNewQuestion] = useState(\"\");\n  const lengthOfQuestion = () => {\n    if (\n      typeof props.questions.data !== \"undefined\" &&\n      props.questions.data.length > 0\n    ) {\n      return <small>({props.questions.data.length} Questions)</small>;\n    }\n  };\n  const helpful = (likes, dislikes) => {\n    return (\n      <div className=\"helpful\">\n        Was this review helpful to you?\n        <ul>\n          <li>{likes <= 0 ? \"\" : likes} Yes</li>\n          <li>{dislikes <= 0 ? \"\" : dislikes} No</li>\n        </ul>\n      </div>\n    );\n  };\n  const answersView = answers => {\n    if (typeof answers === \"object\" && answers.length > 0) {\n      return (\n        <div className=\"answers\">\n          {answers.map(item => (\n            <div className=\"answer\" key={item.id}>\n              <div className=\"post\">\n                <div className=\"comment-title\">\n                  By{\" \"}\n                  {item.user}\n                </div>\n                <div className=\"author\">\n                  On{\" \"}\n                  {item.created_at}\n                </div>\n              </div>\n              <div className=\"text\">{item.answer}</div>\n              {helpful(item.likes, item.dislikes)}\n            </div>\n          ))}\n        </div>\n      );\n    }\n  };\n  const questionsView = () => {\n    if (typeof props.questions.data === \"object\") {\n      return props.questions.data.map(item => {\n        return (\n          <React.Fragment key={item.id}>\n            <div className=\"question\">\n              <div className=\"post\">\n                <div className=\"comment-title\">\n                  By{\" \"}\n                  {item.user}\n                </div>\n                <div className=\"author\">\n                  On{\" \"}\n                  {item.created_at}\n                </div>\n              </div>\n              <div className=\"text\">{item.question}</div>\n              <div className=\"answer-but\">Answer to this question</div>\n            </div>\n            {answersView(item.answers)}\n          </React.Fragment>\n        );\n      });\n    }\n  };\n  const askQuestion = ()=>{\n    props.storeQuestion(\n      {question:newQuestion}\n    )\n  }\n\n  return (\n    <Box>\n      <div className=\"title\">Questions and Answers</div>\n        <div className=\"sub-title\">Ask your question about this product</div>\n      <section>\n        <textarea\n          placeholder=\"\"\n          value={newQuestion}\n          onChange={e => {\n            setNewQuestion(e.target.value)\n          }}\n        />\n        <Row>\n          <Col col=\"3\">\n            <Button onClick={()=> askQuestion()} loading={props.questions.processing}>\n              Sign up\n            </Button>\n            {/*<div className=\"add-faq\" onClick={()=> askQuestion()}>*/}\n            {/*  <span>Ask a question</span>*/}\n            {/*</div>*/}\n          </Col>\n          <Col col=\"9\">\n            <span className=\"rule\">\n              By selecting the 'Ask a question' button, I agree to the content publishing rules on Maleno.\n            </span>\n          </Col>\n        </Row>\n      </section>\n      <section>\n        <Row>\n          <Col col=\"6\">\n            <div className=\"sort-title\">\n              <span>\n                Questions and Answers\n                {lengthOfQuestion()}\n              </span>\n            </div>\n          </Col>\n          <Col col=\"6\">\n            <ul className=\"sort-list\">\n              <li>Sort based on:</li>\n              <li\n                className={props.sort === \"newest\" ? \"active\" : \"\"}\n                onClick={() => {\n                  props.changeSort(\"newest\");\n                }}\n              >\n                Latest questions\n              </li>\n              <li\n                className={props.sort === \"most_answered\" ? \"active\" : \"\"}\n                onClick={() => {\n                  props.changeSort(\"most_answered\");\n                }}\n              >\n                Most answered questions\n              </li>\n              <li\n                className={props.sort === \"user_question\" ? \"active\" : \"\"}\n                onClick={() => {\n                  props.changeSort(\"user_question\");\n                }}\n              >\n                Your questions\n              </li>\n            </ul>\n          </Col>\n        </Row>\n      </section>\n      {questionsView()}\n    </Box>\n  );\n};\nexport default Question;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Box } from \"../styled_components/product/dataBox\";\nimport { getComments } from \"../actions/comment\";\nimport Tabs from \"../components/product/productData/tabs\";\nimport Comments from \"../components/product/productData/comments\";\nimport Question from \"../components/product/productData/question\";\nimport Review from \"../components/product/productData/review\";\nimport Features from \"../components/product/productData/features\";\nimport {QuestionAction} from \"../actions\";\nclass ProductData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"features\",\n      comments: null,\n      comment_sort: \"buyers\",\n      questions: null,\n      question_sort: \"newest\"\n    };\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let result = {};\n    if (nextProps.comments !== prevState.comments) {\n      result.comments = nextProps.comments;\n    }\n    if (nextProps.questions !== prevState.questions) {\n      result.questions = nextProps.questions;\n    }\n\n    return result;\n  }\n\n  changeSort(value, type) {\n    if (type === \"comment\") {\n      this.setState(\n        {\n          comment_sort: value\n        },\n        () => {\n          this.props.getComments(this.props.id, {\n            sort: value\n          });\n        }\n      );\n    } else if (type === \"question\") {\n      this.setState(\n        {\n          question_sort: value\n        },\n        () => {\n          this.props.getQuestion(this.props.id, {\n            sort: value\n          });\n        }\n      );\n    }\n  }\n  listView() {\n    console.log(this.state.questions, \"ddww\");\n    switch (this.state.status) {\n      // case \"features\":\n      //   return (\n      //     <Features\n      //       enName={this.props.enName}\n      //       productData={this.props.productData}\n      //     />\n      //   );\n      case \"comments\":\n        return (\n          <Comments\n            name={this.props.name}\n            comments={this.state.comments}\n            sort={this.state.comment_sort}\n            changeSort={value => {\n              this.changeSort(value, \"comment\");\n            }}\n          />\n        );\n      case \"question\":\n        return (\n          <Question\n            questions={this.state.questions}\n            sort={this.state.question_sort}\n            changeSort={value => {\n              this.changeSort(value, \"question\");\n            }}\n            storeQuestion={(data)=>this.props.storeQuestion(this.props.id, data)}\n            // processing={}\n          />\n        );\n      case \"review\":\n        return (\n          <Review\n            name={this.props.name}\n            advantages={this.props.advantages}\n            disadvantages={this.props.disadvantages}\n            rating={this.props.rating}\n            desc={this.props.desc}\n            meta_description={this.props.meta_description}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n  changeStatus(value) {\n    if (this.state.status !== value) {\n      this.setState(\n        {\n          status: value\n        },\n        () => {\n          if (value === \"question\") {\n            if (!this.state.questions.isFetched) {\n              this.props.getQuestion(this.props.id, {\n                sort: this.state.question_sort\n              });\n            }\n          }\n          if (value === \"comments\") {\n            if (!this.state.comments.cache) {\n              this.props.getComments(this.props.id, {\n                sort: this.state.comment_sort\n              });\n            }\n          }\n        }\n      );\n    }\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <Box>\n          <div className=\"data\">\n            <div className=\"sep\" />\n            <div className=\"tabs\">\n              <Tabs\n                onChange={this.changeStatus.bind(this)}\n                status={this.state.status}\n              />\n            </div>\n            {this.listView()}\n          </div>\n        </Box>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = store => {\n  return {\n    comments: store.Comment,\n    questions: store.Question\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getComments: (id, sort) => {\n      dispatch(getComments(id, sort));\n    },\n    getQuestion: (id, sort) => {\n      // dispatch(getQuestion(id, sort));\n      dispatch(QuestionAction.getListRequest(id, sort));\n    },\n    storeQuestion:(id, data)=>{\n      dispatch(QuestionAction.storeRequest(id, data))\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProductData);\n","import _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (_Object$getOwnPropertySymbols) {\n    var sourceSymbolKeys = _Object$getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import _Object$keys from \"../../core-js/object/keys\";\nexport default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n\n  var sourceKeys = _Object$keys(source);\n\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import styled from \"styled-components\";\nimport Variables, { transition } from \"./variables\";\n\nexport const Box = styled.div`\n  box-shadow: 0 0 12px 0 rgba(0, 0, 0, 0.16);\n  width: 100%;\n  margin: 8px 0;\n  button{\n    position: relative;\n    border-radius: 8px;\n    border: 0;\n    background-color: ${Variables.colors.windows_blue};\n    width: 100%;\n    color: ${Variables.colors.white};\n    line-height: 42px;\n    text-align: center;\n    cursor: pointer;\n    ${transition(0.2)}\n    &:hover {\n      background-color: ${Variables.colors.cool_blue};\n    }\n    &:disabled{\n      background-color: ${Variables.colors.grey_light};\n      color:${Variables.colors.white};\n      cursor:not-allowed;\n      &:hover{\n          box-shadow: none;\n      }\n    }\n  }\n`\nexport const Loading = styled.div`\n  visibility: ${props => (props.show ? \"visible\" : \"hidden\")};\n  position: absolute;\n  right: calc(50% - 9px);\n  top: calc(50% - 9px);\n`;\nexport const Children = styled.div`\n  visibility: ${props => (props.show ? \"visible\" : \"hidden\")};\n  display: inline-flex;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\nimport Variables from \"../variables\";\n\n\nconst TYPES = {\n  primary: {main : Variables.colors.dark_white, second: Variables.colors.menu_border},\n  // primary_blue: {main : Variables.colors.tertiary_400, second: Variables.colors.complementary},\n  // secondary: {main:Variables.colors.complementary_700 ,second: Variables.colors.complementary_500},\n};\nexport const SpinnerContainer = styled.div`\n  .loader,\n  .loader:after {\n    border-radius: 50%;\n    width: ${props => props.size=== \"small\" ? \"1em\": \"1.8em\"};\n    height: ${props => props.size=== \"small\" ? \"1em\": \"1.8em\"};\n  }\n  .loader {\n    margin: 0px auto;\n    font-size: 10px;\n    position: relative;\n    text-indent: -9999em;\n    border-top: ${props => props.type ? \"0.3em solid \" + TYPES[props.type].main : \"0.3em solid \" +  Variables.colors.dark_white};\n    border-right: ${props => props.type  ? \"0.3em solid \" + TYPES[props.type].main : \"0.3em solid \" + Variables.colors.dark_white};\n    border-bottom:${props => props.type  ? \"0.3em solid \" + TYPES[props.type].main : \"0.3em solid \" + Variables.colors.dark_white};\n    border-left: ${props => props.type  ? \"0.3em solid \" + TYPES[props.type].second : \"0.3em solid \" + Variables.colors.menu_border};\n    border-width: ${props => props.size=== \"small\" ? \"0.2em\": \"0.3em\"};;\n    -webkit-transform: translateZ(0);\n    -ms-transform: translateZ(0);\n    transform: translateZ(0);\n    -webkit-animation: load8 1.1s infinite linear;\n    animation: load8 1.1s infinite linear;\n  }\n  @-webkit-keyframes load8 {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes load8 {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAfA;AAiBA;AAAA;AAGA;AAAA;AAIA;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAQA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAKA;AAAA;AAZA;AAkBA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAKA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAQA;AAAA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AAeA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AAYA;AAAA;AACA;AAAA;AACA;AAEA;AADA;AAIA;AACA;AADA;AAGA;AAEA;AACA;AAEA;AADA;AAIA;AACA;AADA;AAGA;AAEA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAPA;AACA;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AA3CA;AA6CA;;;AACA;AAAA;AACA;AAAA;AACA;AAEA;AADA;AAIA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAEA;AACA;;;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAUA;;;AA/HA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;AArBA;AACA;AA2IA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;;;;;;;;;;;;AC3KA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AA4BA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;A","sourceRoot":""}