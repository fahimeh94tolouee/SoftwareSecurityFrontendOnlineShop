{"version":3,"file":"static/webpack/static/development/pages/cart.js.1b0bf28edf5588863be5.hot-update.js","sources":["webpack:///./pages/cart.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"next/router\";\nimport { getCart } from \"../actions/cart\";\nimport { Row, Col } from \"styled-bootstrap-grid\";\nimport { SmallBut, Slogans } from \"../styled_components/cart\";\nimport Basket from \"../components/cart/basket\";\nimport Invoice from \"../components/cart/invoice\";\nclass Cart extends Component {\n  static async getInitialProps({ store, query }) {}\n  componentDidMount() {\n    this.props.getCart();\n  }\n  changeAmount(id, quantity) {\n    let cart = [];\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n    cart.filter((item, key) => {\n      if (item.id === id) {\n        cart[key][\"quantity\"] = quantity;\n      }\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    this.props.getCart();\n  }\n  removeItem(id) {\n    let cart = [];\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n    cart.filter((item, key) => {\n      if (item.id === id) {\n        cart.splice(key, 1);\n      }\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    this.props.getCart();\n  }\n  goToShipping() {\n    this.props.router.push(\"/shipping\");\n  }\n  render() {\n    console.log(this.props);\n    return (\n      <div className=\"container\">\n        <Row>\n          <Col col={9}>\n            <Basket\n              items={this.props.cart.items}\n              changeAmount={this.changeAmount.bind(this)}\n              removeItem={this.removeItem.bind(this)}\n            />\n            <SmallBut onClick={this.goToShipping.bind(this)}>\n              ادامه ثبت سفارش\n            </SmallBut>\n          </Col>\n          <Col col={3}>\n            <Invoice\n              data={this.props.cart.meta}\n              nextStep={this.goToShipping.bind(this)}\n              stepStatus={true}\n            />\n            <Slogans>\n              <ul>\n                <li>\n                  <i className=\"icon-track\" />\n                  Express Delivery\n                </li>\n                <li>\n                  <i className=\"icon-pay-7\" />Exchange Guarantee for Refunds\n                </li>\n                <li>\n                  <i className=\"icon-pay-8\" />\n                  Cash on Delivery\n                </li>\n              </ul>\n            </Slogans>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = store => {\n  return {\n    cart: store.Cart\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCart: () => {\n      dispatch(getCart());\n    }\n  };\n};\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Cart)\n);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;AAEA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AAHA;AAQA;AAAA;AAIA;AAAA;AAGA;AAAA;AASA;;;;;;;;;;;;AAzEA;AACA;;;;;;;;;;;;;;;;;;AAFA;AACA;AA2EA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;;;;A","sourceRoot":""}