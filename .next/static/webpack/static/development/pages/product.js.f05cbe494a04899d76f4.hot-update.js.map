{"version":3,"file":"static/webpack/static/development/pages/product.js.f05cbe494a04899d76f4.hot-update.js","sources":["webpack:///./constants/urls.js","webpack:///./pages/product.js"],"sourcesContent":["export const REGISTER = \"/register\";\nexport const LOGIN = \"/login\";\nexport const RESET_PASSWORD = \"/resetpassword\";\nexport const FORGET_PASSWORD = \"/forget\";\nexport const VERIFY = \"/verify\";\n\nexport const HOME = \"/\"\n\nexport const PROFILE = \"/profile\"\nexport const INFORMATION = \"/information\"\nexport const ORDERS = \"/orders\"\nexport const WISHLIST = \"/wishlist\"\nexport const REVIEWS = \"/reviews\"\n\nexport const ADDRESSES = \"/addresses\"\n\nexport const ANNOUNCEMENTS = \"/announcements\"\n\nexport const PRODUCT = \"/product\"\nexport const CART = \"/cart\"","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"next/router\";\nimport {\n  getProduct,\n  getProductVariations,\n  setLoading\n} from \"../actions/product\";\nimport {ProductAction} from \"../actions\";\nimport { getBreadcrumb } from \"../actions/breadcrumb\";\nimport Breadcrumb from \"../components/lib/breadcrumb\";\nimport { TopBox, BreadcrumbBox } from \"../styled_components/product\";\n\nimport TopSection from \"../components/product/topSection\";\nimport Slogans from \"../components/product/slogans\";\nimport Variations from \"../components/product/variations\";\nimport ProductData from \"../containers/productData\";\nimport ProductCarousel from \"../components/homeScreen/productCarousel\";\nimport {CART} from \"../constants/storageKey\";\n\nclass Product extends Component {\n  constructor() {\n    super();\n    this.TopBoxRef = React.createRef();\n\n  }\n  static async getInitialProps({ store, query }) {\n    // await store.dispatch(getProduct(query.id));\n    await store.dispatch(ProductAction.show(query.id));\n    // await store.dispatch(getBreadcrumb(\"product\", query.id));\n\n    return { id: query.id };\n  }\n  state = {\n    id: this.props && this.props.id\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let result = {};\n    if (nextProps.id !== prevState.id) {\n      result.id = nextProps.id;\n      nextProps.setLoading({\n          loading:false,\n      })\n    }\n    return result;\n  }\n  componentDidMount() {\n      this.props.setLoading({\n          loading:false,\n      })\n    this.props.show(this.state.id)\n  }\n\n    variationChange(value) {\n    // this.props.getProductVariations(this.props.id, value);\n  }\n  addToCart(id, qty) {\n    let cart = [];\n    let pushStatus = true;\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n    cart.filter(item => {\n      if (item.id === id) {\n        pushStatus = false;\n      }\n    });\n    if (pushStatus) {\n      cart.push({ id: id, quantity: qty });\n    }\n    localStorage.setItem(CART, JSON.stringify(cart));\n    this.props.router.push(CART);\n  }\n  render() {\n    const{product} = this.props;\n    return (\n      <React.Fragment>\n        <TopBox ref={this.TopBoxRef}>\n          <TopSection\n            addToCart={this.addToCart.bind(this)}\n            product={product}\n            variationChange={this.variationChange.bind(this)}\n            containerWidth={this.TopBoxRef && this.TopBoxRef.current && this.TopBoxRef.current.getBoundingClientRect().width}\n          />\n        </TopBox>\n        <Slogans />\n        {/*<Variations items={product.variations} />*/}\n        {/*<ProductCarousel*/}\n        {/*  title=\"جدیدترین محصولات افزوده شده\"*/}\n        {/*  more=\"/product/1\"*/}\n        {/*  fetch_url={*/}\n        {/*    process.env.apiUrl + \"/home_page/lists?type=newest_products\"*/}\n        {/*  }*/}\n        {/*/>*/}\n        <ProductData\n          name={product.title}\n          // enName={product.en_name}\n          // productData={product.product_data}\n          // advantages={product.advantages}\n          // disadvantages={product.disadvantages}\n          // rating={this.props.product.meta.ratings}\n          desc={product.description}\n          // meta_description={product.meta_description}\n          id={this.state.id}\n        />\n        {/*<ProductCarousel*/}\n        {/*  title=\"خریداران این محصول این محصولات را نیز خرید اند\"*/}\n        {/*  more=\"/product/1\"*/}\n        {/*  fetch_url={*/}\n        {/*    process.env.apiUrl + \"/home_page/lists?type=newest_products\"*/}\n        {/*  }*/}\n        {/*/>*/}\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = store => {\n  return {\n    product: store.Product.product,\n    breadcrumb: store.Breadcrumb\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getProduct: id => {\n      dispatch(getProduct(id));\n    },\n    getProductVariations: (product, variation) => {\n      dispatch(getProductVariations(product, variation));\n    },\n    setLoading: data => {\n      dispatch(setLoading(data));\n    },\n    show: id=>{\n      dispatch(ProductAction.show(id))\n    }\n  };\n};\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Product)\n);\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAaA;AADA;AACA;AAXA;AAFA;AAIA;AACA;;;AAqBA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AAEA;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;AACA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAiBA;AAEA;AACA;AACA;AACA;AANA;AAOA;AAPA;AASA;AATA;AAoBA;;;;;;;;;;;;AAzFA;;AAEA;AACA;;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;;;;AA1BA;AACA;AAgGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AAAA;;;;A","sourceRoot":""}